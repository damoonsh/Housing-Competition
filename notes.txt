# Implement:
    - Start making different neural network models which have a specific architecture and are fine tuned, get your head around keras-tuner, after making models with different architectures and finding the tuned hyperparameters for them then average their predictions.
    - use hyperparameter tunning using keras-tuner
    - Write a number of different models then validate their accuracy based on the validation model, then average the predictions. The workflow: come up with a neural network and find the hyperparameters for it, then if it had a relatively low error rate then save the model with the convention <model-name><error> in the models folder.
	
	- Try to find the most suitable parameters for the inverseTimeDecay scheduler.
	
	
# Agenda:
	- Try out different tweaks, normalized version of x works really well yet it is not recommended to use a normalized x and a non-normalized y.
    - Try different models, save the results, subtract the result and find the indices with high difference, try to understand why they are so
    different and then make assumptions on their features.